def javaProjects = [
        project(':core'),
		project(':web')
]

buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}

	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE")
		classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"
	}

}

configure(javaProjects) {
	apply plugin: 'java-library'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: "com.ewerk.gradle.plugins.querydsl"

	group = 'com.lannstark'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '1.8'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor ('org.projectlombok:lombok')
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}

		// querydsl
		implementation("com.querydsl:querydsl-jpa")
		implementation("com.querydsl:querydsl-apt")
	}

	def querydslSrcDir = 'src/main/java/generated'

	querydsl {
		library = "com.querydsl:querydsl-apt"
		jpa = true
		querydslSourcesDir = querydslSrcDir
	}

	compileQuerydsl{
		options.annotationProcessorPath = configurations.querydsl
	}

	configurations {
		querydsl.extendsFrom compileClasspath
	}

	sourceSets {
		main {
			java {
				srcDirs = ['src/main/java', querydslSrcDir]
			}
		}
	}

	test {
		useJUnitPlatform()
	}

}